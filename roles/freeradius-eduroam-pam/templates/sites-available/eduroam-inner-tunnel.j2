# -*- text -*-
######################################################################
#
#  This is a virtual server that handles *only* inner tunnel
#  requests for EAP-TTLS and PEAP types.
#  It is mostly configured per
#  https://wiki.geant.org/display/H2eduroam/freeradius-idp
#
#  authorize → authenticate → post-auth
#
######################################################################

server eduroam-inner-tunnel {

#
#  This next section is here to allow testing of the "inner-tunnel"
#  authentication methods, independently from the "default" server.
#  It is listening on "localhost", so that it can only be used from
#  the same machine.
#
#	$ radtest USER PASSWORD 127.0.0.1:18121 0 testing123
#
#  If it works, you have configured the inner tunnel correctly.
#
#  To check if TTLS/PAP will work, use:
#
#	$ radtest -t pap USER PASSWORD 127.0.0.1:18121 0 testing123
#
#  To check if PEAP/MSCHAPv2 will work, use:
#
#	$ radtest -t mschap USER PASSWORD 127.0.0.1:18121 0 testing123
#
#  If the EAP type(s) you're expecting doesn't work, then
#
#	FIX THE INNER TUNNEL CONFIGURATION SO THAT IT WORKS.
#
#  Do NOT do any EAP tests.  It won't help.  Instead, concentrate
#  on fixing the inner tunnel configuration.  DO NOTHING ELSE.
#
	listen {
		ipaddr = 127.0.0.1
		port = 18121
		type = auth
	}

	authorize {
		auth_log
		filter_username
{% if use_pam %}

		#  we use suffix here so that the pam_imap module can specify
		#  it's own realm, but that has implications in the users file
		suffix
		update control {
			&Proxy-To-Realm := LOCAL
		}

{% endif %}
		eap {
			ok = return
		}
		files
		expiration
		mschap
		pap
	}


	authenticate {
		Auth-Type PAP {
			pap
		}

		Auth-Type MS-CHAP {
			mschap
		}
		mschap
{% if use_pam %}

		#  Pluggable Authentication Modules
		pam
{% endif %}

		eap
	}

	#  Session database, used for checking Simultaneous-Use. Either the radutmp
	#  or rlm_sql module can handle this.
	#  The rlm_sql module is *much* faster
	session {
		radutmp
	}

	post-auth {
		reply_log
		Post-Auth-Type REJECT {
			reply_log
			attr_filter.access_reject
			update outer.session-state {
				&Module-Failure-Message := &request:Module-Failure-Message
			}
		}
		update outer.reply {
			User-Name = "%{request:User-Name}"
		}
	}

} # eduroam-inner-tunnel server block
